package main

// (0,0) => (0,3)
// (0,1) => (1,3)
// (0,2) => (2,3)
// (0,3) => (3,3)
// (1,0) => (0,2)
// (1,1) => (1,2)
// (1,2) => (2,2)
// (1,3) => (3,2)
// (2,0) => (0,1)
// (2,1) => (1,1)
// (2,2) => (2,1)
// (2,3) => (3,1)
// (3,0) => (0,0)
// (3,1) => (1,0)
// (3,2) => (2,0)
// (3,3) => (3,0)

// (0,0) = (0,2) = (2,2) = (2,0) = (0,0)
// (1,0) = (0,1) = (1,2) = (2,1) = (1,0)
// (2,0) = (0,2)

// (2,0) = (2,2) = (0,2)

// a,b b=

func rotate(matrix [][]int) {
	n := len(matrix)

	for i := 0; i < n/2; i++ {
		for j := 0; j < (n+1)/2; j++ {
			matrix[i][j], matrix[n-j-1][i], matrix[n-1-i][n-j-1], matrix[j][n-i-1] = matrix[n-j-1][i], matrix[n-1-i][n-j-1], matrix[j][n-i-1], matrix[i][j]
		}
	}
}

func main() {
	// matrix := [][]int{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}
	matrix := [][]int{{5, 1, 9, 11}, {2, 4, 8, 10}, {13, 3, 6, 7}, {15, 14, 12, 16}}
	rotate(matrix)
}
